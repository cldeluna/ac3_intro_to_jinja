# -*- coding: utf-8 -*-
"""ac3_j2_payload_ex4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xraT8qR-XcjX67xyd7U-2wNV1A5R-eiB

## Exercise 4 - Working with Data
"""

import httpx
import jinja2
import datetime
from collections import Counter

url = "http://api.open-notify.org/astros.json"

response = httpx.get(url)

response.raise_for_status()

payload = response.json()

type(payload)

payload

payload.keys()

payload['number']

payload['message']

payload['people']

"""# Generate a Daily Report of the people in space

Include todays timestamp and the total number of people in space.

## Get your data into your template

Script Variable ---> Template Variable  

payload -----> {{ payload }}      # when you explode payload, there is no resulting variable called "payload"

payload -----> {{ people }} # when you explode payload, you get three variables (which used to be keys) people, number, message

payload -----> {{ number }}

payload -----> {{ message }}

payload=payload -----> {{ payload }}
"""

template_str0 = """

{{ payload['number'] }} people in space

"""

# Template
template0 = jinja2.Template(template_str0)

"""## Unnamed/Unpacked/Exploded"""

# Render
output0 = template0.render(payload)

output0

print(output0)

"""### Named"""

output0 = template0.render(payload=payload)

output0

"""## Option 1 - Send distinct variables"""

template_str1 = """
People in Space
===============

Total: {{ people | length }}
As of: {{ timestamp.strftime('%A, %B %d, %Y at %I:%M %p') }}

{% for person in people %}
- {{ person['name'] }} ({{ person['craft'] }})
{% endfor %}
"""

# Template
template1 = jinja2.Template(template_str1)

# Render the Template with the Data
output1 = template1.render(people=payload, timestamp=datetime.datetime.now())

print(output1)

len(payload)

"""# Option 2 - Send one big payload file

I want to have more data in my report.
- todays timestamp
- total people in each craft
"""

payload.keys()

# Count the number of people on each craft
craft_counts = Counter(person['craft'] for person in payload['people'])

craft_counts

# Add timestamp
payload['timestamp'] = datetime.datetime.now().strftime('%A, %B %d, %Y at %I:%M %p')
payload['craft_counts'] = craft_counts

payload.keys()

# Jinja2 template
template_str2 = """
People in Space
===============

Total: {{ payload["number"] }}
Craft Totals:
{% for craft, count in payload["craft_counts"].items() %}
- {{ craft }}: {{ count }}
{% endfor %}
As of: {{ payload["timestamp"] }}

{% for person in payload["people"] %}
- {{ person["name"] }} ({{ person["craft"] }})
{% endfor %}
"""

template_obj2 = jinja2.Template(template_str2)

output2 = template_obj2.render(payload=payload)

print(output2)

